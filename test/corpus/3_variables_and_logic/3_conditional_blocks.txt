===
.CCA. Simple if/else
===
{ x > 0:
	~ y = x - 1
- else:
	~ y = x + 1
}
---

(ink
  (content_block
    (paragraph
      (cond_block
        (cond_arm
          condition: (binary
            left: (identifier)
            right: (number))
          (code
            (assignment
              name: (identifier)
              value: (binary
                left: (identifier)
                right: (number)))))
        (cond_arm
          condition: (else)
          (code
            (assignment
              name: (identifier)
              value: (binary
                left: (identifier)
                right: (number)))))))))

===
.CCB. Extended if/else
===
{
	- x == 0:
		~ y = 0
	- x > 0:
		~ y = x - 1
	- else:
		~ y = x + 1
}
---

(ink
  (content_block
    (paragraph
      (cond_block
        (cond_arm
          condition: (binary
            left: (identifier)
            right: (number))
          (code
            (assignment
              name: (identifier)
              value: (number))))
        (cond_arm
          condition: (binary
            left: (identifier)
            right: (number))
          (code
            (assignment
              name: (identifier)
              value: (binary
                left: (identifier)
                right: (number)))))
        (cond_arm
          condition: (else)
          (code
            (assignment
              name: (identifier)
              value: (binary
                left: (identifier)
                right: (number)))))))))

===
.CCC. Switch Blocks
===
{ x:
- 0: 	zero
- 1: 	one
- 2: 	two
- else: lots
}
---

(ink
  (content_block
    (paragraph
      (cond_block
        (cond_arm
          (identifier))
        (cond_arm
          (number)
          (paragraph
            (text)))
        (cond_arm
          (number)
          (paragraph
            (text)))
        (cond_arm
          (number)
          (paragraph
            (text)))
        (cond_arm
          (else)
          (paragraph
            (text)))))))

===
.CCD. Example: Context-Relevant Content
===
=== dream ===
	{
		- visited_snakes && not dream_about_snakes:
			~ fear++
			-> dream_about_snakes

		- visited_poland && not dream_about_polish_beer:
			~ fear--
			-> dream_about_polish_beer

		- else:
			// breakfast-based dreams have no effect
			-> dream_about_marmalade
	}
---

(ink
  (knot_block
    (knot
      (identifier))
    (content_block
      (paragraph
        (cond_block
          (cond_arm
            (binary
              (identifier)
              (unary
                (identifier)))
            (code
              (postfix
                (identifier)))
            (paragraph
              (divert
                (identifier))))
          (cond_arm
            (binary
              (identifier)
              (unary
                (identifier)))
            (code
              (postfix
                (identifier)))
            (paragraph
              (divert
                (identifier))))
          (cond_arm
            (else)
            (comment)
            (paragraph
              (divert
                (identifier)))))))))

===
.CCE. Multiline Blocks (incl. Modified Shuffles)
===
// Sequence: go through the alternatives, and stick on last
{ stopping:
	-	I entered the casino.
	-  I entered the casino again.
	-  Once more, I went inside.
}

// Shuffle: show one at random
At the table, I drew a card. <>
{ shuffle:
	- 	Ace of Hearts.
	- 	King of Spades.
	- 	2 of Diamonds.
		'You lose this time!' crowed the croupier.
}

{ shuffle once:
-	The sun was hot.
- 	It was a hot day.
}

{ shuffle stopping:
- 	A silver BMW roars past.
-	A bright yellow Mustang takes the turn.
- 	There are like, cars, here.
}

// Cycle: show each in turn, and then cycle
{ cycle:
	- I held my breath.
	- I waited impatiently.
	- I paused.
}

// Once: show each, once, in turn, until all have been shown
{ once:
	- Would my luck hold?
	- Could I win the hand?
}
---

(ink
  (content_block
    (comment)
    (paragraph
      (multiline_alternatives
        (alt_arm
          (paragraph
            (text)))
        (alt_arm
          (paragraph
            (text)))
        (alt_arm
          (paragraph
            (text)))))
    (comment)
    (paragraph
      (text)
      (glue))
    (paragraph
      (multiline_alternatives
        (alt_arm
          (paragraph
            (text)))
        (alt_arm
          (paragraph
            (text)))
        (alt_arm
          (paragraph
            (text))
          (paragraph
            (text)))))
    (paragraph
      (multiline_alternatives
        (alt_arm
          (paragraph
            (text)))
        (alt_arm
          (paragraph
            (text)))))
    (paragraph
      (multiline_alternatives
        (alt_arm
          (paragraph
            (text)))
        (alt_arm
          (paragraph
            (text)))
        (alt_arm
          (paragraph
            (text)))))
    (comment)
    (paragraph
      (multiline_alternatives
        (alt_arm
          (paragraph
            (text)))
        (alt_arm
          (paragraph
            (text)))
        (alt_arm
          (paragraph
            (text)))))
    (comment)
    (paragraph
      (multiline_alternatives
        (alt_arm
          (paragraph
            (text)))
        (alt_arm
          (paragraph
            (text)))))))
