===
.AIA. CHOICE_COUNT
===
*	{false} Option A
*	{true} Option B
*	{CHOICE_COUNT() == 1} Option C

---

(ink
  content: (content_block
    (choice_block
      header: (choice
        (choice_marks
          (choice_mark))
        (condition)
        main: (content
          content: (text))))
    (choice_block
      header: (choice
        (choice_marks
          (choice_mark))
        (condition)
        main: (content
          content: (text))))
    (choice_block
      header: (choice
        (choice_marks
          (choice_mark))
        (condition
          expr: (binary
            left: (call
              name: (identifier))
            right: (number)))
        main: (content
          content: (text))))))

===
.AIB. TURNS_SINCE
===
*	{TURNS_SINCE(-> sleeping.intro) > 10} You are feeling tired... -> sleeping
*	{TURNS_SINCE(-> laugh) == 0}  You try to stop laughing.
---

(ink
  content: (content_block
    (choice_block
      header: (choice
        (choice_marks
          (choice_mark))
        (condition
          expr: (binary
            left: (call
              name: (identifier)
              args: (args
                (divert
                  target: (qualified_name
                    (identifier)
                    (identifier)))))
            right: (number)))
        main: (content
          content: (text)
          redirect: (divert
            target: (identifier)))))
    (choice_block
      header: (choice
        (choice_marks
          (choice_mark))
        (condition
          expr: (binary
            left: (call
              name: (identifier)
              args: (args
                (divert
                  target: (identifier))))
            right: (number)))
        main: (content
          content: (text))))))

===
.AIC. came_from
===
=== function came_from(-> x)
	~ return TURNS_SINCE(x) == 0

---

(ink
  (knot_block
    (knot
      (identifier)
      (params
        (param
          (divert
            (identifier)))))
    (content_block
      (code
        (return
          (binary
            (call
              (identifier)
              (args
                (identifier)))
            (number)))))))

===
.AIX. Expressions TODO: Move to appropriate section when written
===
* {a + b * not !c == 4 || a / (b + c) <= -3} Go to prison

---

(ink
  content: (content_block
    (choice_block
      header: (choice
        (choice_marks
          (choice_mark))
        (condition
          expr: (binary
            left: (binary
              left: (binary
                left: (identifier)
                right: (binary
                  left: (identifier)
                  right: (unary
                    right: (unary
                      right: (identifier)))))
              right: (number))
            right: (binary
              left: (binary
                left: (identifier)
                right: (paren
                  (binary
                    left: (identifier)
                    right: (identifier))))
              right: (unary
                right: (number)))))
        main: (content
          content: (text))))))
