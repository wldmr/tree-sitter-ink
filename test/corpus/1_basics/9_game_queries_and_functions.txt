===
.AIA. CHOICE_COUNT
===
*	{false} Option A
*	{true} Option B
*	{CHOICE_COUNT() == 1} Option C

---

(ink
  (content_block
    (choice
      (condition)
      main: (flow
        (text)))
    (choice
      (condition)
      main: (flow
        (text)))
    (choice
      (condition
        (binary
          (call
            name: (identifier))
          (number)))
      main: (flow
        (text)))))

===
.AIB. TURNS_SINCE
===
*	{TURNS_SINCE(-> sleeping.intro) > 10} You are feeling tired... -> sleeping
*	{TURNS_SINCE(-> laugh) == 0}  You try to stop laughing.
---

(ink
  (content_block
    (choice
      (condition
        (binary
          (call
            (identifier)
            (args
              (divert
                (qualified_name
                  (identifier)
                  (identifier)))))
          (number)))
      (flow
        (text))
      (divert
        (identifier)))
    (choice
      (condition
        (binary
          (call
            (identifier)
            (args
              (divert
                (identifier))))
          (number)))
      (flow
        (text)))))

===
.AIC. came_from
===
=== function came_from(-> x)
	~ return TURNS_SINCE(x) == 0

---

(ink
  (knot_block
    (function_declaration
      (identifier)
      (params
        (divert
          (identifier))))
    (content_block
      (code
        (return
          (binary
            (call
              (identifier)
              (args
                (identifier)))
            (number)))))))

===
.AIX. Expressions TODO: Move to appropriate section when written
===
* {a + b * not !c == 4 || a / (b + c) <= -3} Go to prison

---

(ink
  (content_block
    (choice
      (condition
        (binary
          (binary
            (binary
              (identifier)
              (binary
                (identifier)
                (unary
                  (unary
                    (identifier)))))
            (number))
          (binary
            (binary
              (identifier)
              (paren
                (binary
                  (identifier)
                  (identifier))))
            (unary
              (number)))))
      (flow
        (text)))))
