===
.DBA. Threads join multiple sections together
===
== thread_example ==
I had a headache; threading is hard to get your head around.
<- conversation
<- walking


== conversation ==
It was a tense moment for Monty and me.
 * "What did you have for lunch today?"[] I asked.
    "Spam and eggs," he replied.
 * "Nice weather, we're having,"[] I said.
    "I've seen better," he replied.
 - -> house

== walking ==
We continued to walk down the dusty road.
 * [Continue walking]
    -> house

== house ==
Before long, we arrived at his house.
-> END
---

(ink
  (knot_block
    (knot
      (identifier))
    (content_block
      (paragraph
        (text))
      (paragraph
        (thread
          (identifier)))
      (paragraph
        (thread
          (identifier)))))
  (knot_block
    (knot
      (identifier))
    (content_block
      (paragraph
        (text))
      (choice_block
        (choice
          (choice_marks
            (choice_mark))
          (content
            (text))
          (choice_only)
          (content
            (text)))
        (paragraph
          (text)))
      (choice_block
        (choice
          (choice_marks
            (choice_mark))
          (content
            (text))
          (choice_only)
          (content
            (text)))
        (paragraph
          (text)))
      (gather_block
        (gather
          (gather_marks
            (gather_mark))
          (divert
            (identifier))))))
  (knot_block
    (knot
      (identifier))
    (content_block
      (paragraph
        (text))
      (choice_block
        (choice
          (choice_marks
            (choice_mark))
          (choice_only
            (content
              (text))))
        (paragraph
          (divert
            (identifier))))))
  (knot_block
    (knot
      (identifier))
    (content_block
      (paragraph
        (text))
      (paragraph
        (divert
          (identifier))))))

===
.DBB. Organization of wide choice points
===

=== the_kitchen

- (top)
	<- drawers(-> top)
	<- cupboards(-> top)
	<- room_exits

= drawers (-> goback)
	// choices about the drawers...
	...
= cupboards(-> goback)
	// choices about cupboards
	...
= room_exits
	// exits; doesn't need a "return point" as if you leave, you go elsewhere
	...
---

(ink
  (knot_block
    (knot
      (identifier))
    (content_block
      (gather_block
        (gather
          (gather_marks
            (gather_mark))
          (label
            (identifier)))
        (paragraph
          (thread
            (call
              (identifier)
              (args
                (divert
                  (identifier))))))
        (paragraph
          (thread
            (call
              (identifier)
              (args
                (divert
                  (identifier))))))
        (paragraph
          (thread
            (identifier)))))
    (stitch_block
      (stitch
        (identifier)
        (params
          (divert
            (identifier))))
      (content_block
        (comment)
        (paragraph
          (text))))
    (stitch_block
      (stitch
        (identifier)
        (params
          (divert
            (identifier))))
      (content_block
        (comment)
        (paragraph
          (text))))
    (stitch_block
      (stitch
        (identifier))
      (content_block
        (comment)
        (paragraph
          (text))))))
