{
  "name": "ink",
  "rules": {
    "ink": {
      "type": "SEQ",
      "members": [
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_line"
          }
        }
      ]
    },
    "_line": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "flow"
        },
        {
          "type": "ALIAS",
          "content": {
            "type": "PATTERN",
            "value": "\\n"
          },
          "named": false,
          "value": "\\n"
        }
      ]
    },
    "text": {
      "type": "TOKEN",
      "content": {
        "type": "PREC",
        "value": -10,
        "content": {
          "type": "PATTERN",
          "value": "[^\\n\\{\\}|]+"
        }
      }
    },
    "flow": {
      "type": "PREC_RIGHT",
      "value": 0,
      "content": {
        "type": "REPEAT1",
        "content": {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "conditional_text"
            },
            {
              "type": "SYMBOL",
              "name": "alternatives"
            },
            {
              "type": "SYMBOL",
              "name": "text"
            }
          ]
        }
      }
    },
    "alternatives": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "REPEAT1",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "STRING",
                "value": "|"
              },
              {
                "type": "SYMBOL",
                "name": "flow"
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    },
    "conditional_text": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "FIELD",
          "name": "condition",
          "content": {
            "type": "SYMBOL",
            "name": "_expr"
          }
        },
        {
          "type": "STRING",
          "value": ":"
        },
        {
          "type": "FIELD",
          "name": "iftrue",
          "content": {
            "type": "SYMBOL",
            "name": "flow"
          }
        },
        {
          "type": "STRING",
          "value": "|"
        },
        {
          "type": "FIELD",
          "name": "else",
          "content": {
            "type": "SYMBOL",
            "name": "flow"
          }
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    },
    "_expr": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SYMBOL",
          "name": "binary"
        }
      ]
    },
    "binary": {
      "type": "PREC_LEFT",
      "value": 0,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "_expr"
          },
          {
            "type": "FIELD",
            "name": "op",
            "content": {
              "type": "SYMBOL",
              "name": "_binary_operator"
            }
          },
          {
            "type": "SYMBOL",
            "name": "_expr"
          }
        ]
      }
    },
    "_binary_operator": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "and"
        },
        {
          "type": "STRING",
          "value": "or"
        }
      ]
    },
    "identifier": {
      "type": "PATTERN",
      "value": "[a-zA-z_][a-zA-Z0-9_]*"
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    }
  ],
  "conflicts": [
    [
      "alternatives",
      "conditional_text"
    ],
    [
      "_expr",
      "text"
    ],
    [
      "identifier",
      "text"
    ]
  ],
  "precedences": [],
  "externals": [],
  "inline": [
    "_expr"
  ],
  "supertypes": []
}
